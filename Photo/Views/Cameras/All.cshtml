@using Photo.Models.Cars
@model Photo.Models.Cars.AllCarmerasQueryModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

 <main class="page catalog-page">
        <section class="clean-block clean-catalog dark">
            < class="container">
            <div class="block-heading">
                <h2 class="text-info">Catalog Page</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc quam urna, dignissim nec auctor in,
                    mattis vitae leo.</p>
            </div>
           <form method="get">
            <div class="row">
                <div class="form-group col-md-4">
                    <div class="form-group">
                        <label asp-for="Brand"></label>
                        <select asp-for="Brand" class="form-check">
                            <option value="">All</option>

                            @foreach (var brand in Model.Brands)
                            {
                                <option value="@brand">@brand</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="SearchTerm"></label>
                    <input asp-for="SearchTerm" class="form-control" placeholder="BMW 640D, etc...">
                </div>

                <div class="form-group col-md-4">
                    <div class="form-group">
                        <label asp-for="Sorting"></label>
                        <select asp-for="Sorting" class="form-control">
                            <option value="0" selected>Date Created</option>
                            <option value="1">Year</option>
                            <option value="2">Brand And Model</option>
                        </select>
                    </div>
                </div>
            </div>
            </form>
            @{
                var previousPage = Model.CurrentPage - 1;
                if (previousPage < 1)
                {
                    previousPage = 1;
                }

                var maxPage = Math.Ceiling((double)Model.TotalCars / AllCarmerasQueryModel.CamerasPerPage);
            }

            <div class="row mb-5">
                <div class="col-md-6">
                    <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Cameras"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-brand="@Model.Brand"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)"><<</a>
                </div>
    
                @{
                    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                                 !Model.Cameras.Any();
                }

                <div class="col-md-6">
                    <a class="btn btn-primary float-sm-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
                       asp-controller="Cameras"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-brand="@Model.Brand"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)">>></a>
                </div>
            </div>

            @if (!Model.Cameras.Any())
            {
                <h2 class="text-center">No cameras found by the given criteria!</h2>
            }

                        
            <partial name="_CamerasPartial" model="@Model.Cameras" />

        </section>
    </main>